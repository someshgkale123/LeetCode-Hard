Problem Statement:

Example 1:
Input: num = 123
Output: "One Hundred Twenty Three"

Example 2:
Input: num = 12345
Output: "Twelve Thousand Three Hundred Forty Five"

Example 3:
Input: num = 1234567
Output: "One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven"

Example 4:
Input: num = 1234567891
Output: "One Billion Two Hundred Thirty Four Million Five Hundred Sixty Seven Thousand Eight Hundred Ninety One"
 
 
Solution:
class Solution:
    def numberToWords(self, num: int) -> str:
    
        ######### O(N);O(1)
        
        lessthan20=["","One","Two","Three","Four","Five","Six","Seven","Eight","Nine","Ten",
                   "Eleven","Twelve","Thirteen","Fourteen","Fifteen","Sixteen","Seventeen","Eighteen","Nineteen"]
        
        tens=["","","Twenty","Thirty","Forty","Fifty","Sixty","Seventy","Eighty","Ninety"]
        
        digits=["","Thousand","Million","Billion"]
        
        def getword(num):
            if not num:
                return []
            if num<20:
                return [lessthan20[num]]
            
            if num<100:
                quotient,remainder=num//10,num%10
                return [tens[quotient]]+getword(remainder)
            
            if num<1000:
                quotient,remainder=num//100,num%100
                return [lessthan20[quotient],"Hundred"]+getword(remainder)
            
            for power,digit in enumerate(digits,1):
                if num<1000**(power+1):
                    quotient,remainder=num//1000**power, num%1000**power
                    return getword(quotient)+[digits[power]]+getword(remainder)
        return " ".join(getword(num)) or "Zero"
            
